{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfiled","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC3B,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAA1B,iBAA6CG,IAAI,WACzD,gCACE,6BAAKL,IACL,4BAAIC,WCIGK,EAVE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,qBAAKJ,UAAU,YAAf,SACGI,EAAOC,KAAI,SAACC,EAAMC,GACjB,OAAO,cAAC,EAAD,CAAcR,GAAIK,EAAOG,GAAGR,GAAIF,KAAMS,EAAKT,KAAMC,MAAOQ,EAAKR,OAAlDS,SCAXC,EAJG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAChC,OAAO,uBAAOC,KAAK,SAASC,YAAY,gBAAgBC,SAAUH,KCGrDI,EAJA,SAACC,GACd,OAAO,qBAAKf,UAAU,SAAf,SAAyBe,EAAMC,YCmBzBC,E,kDAnBb,WAAYF,GAAQ,IAAD,8BACjB,cAAMA,IACDG,MAAQ,CACXC,UAAU,GAHK,E,qDAOnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG5B,WACE,OAAIG,KAAKJ,MAAMC,SACN,0DAEFG,KAAKP,MAAMC,a,GAhBKQ,aCkDZC,G,wDA3Cb,aAAe,IAAD,8BACZ,gBAeFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAf1C,EAAKZ,MAAQ,CACXd,OAAQ,GACRwB,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBG,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,EAAKZ,SAAS,CAAEnB,OAAQ+B,S,oBAQ9B,WAAU,IAAD,EACyBb,KAAKJ,MAA7Bd,EADD,EACCA,OAAQwB,EADT,EACSA,YACVQ,EAAiBhC,EAAOiC,QAAO,SAACC,GACpC,OAAOA,EAAMzC,KAAK0C,cAAcC,SAASZ,EAAYW,kBAEvD,OAAQnC,EAAOqC,OAGb,qCACE,sBAAKzC,UAAU,cAAf,UACE,6CACA,cAAC,EAAD,CAAWA,UAAU,YAAYU,aAAcY,KAAKI,oBAEtD,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUtB,OAAQgC,WATxB,gD,GA3BYM,IAAMlB,YCITmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,mCACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b32704a0.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst Card = ({ name, email, id }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <img src={`https://robohash.org/${id}?size=200x200`} alt=\"robots\" />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import Card from \"./Card\"\r\n\r\nconst CardList = ({ robots }) => {\r\n  return (\r\n    <div className=\"container\">\r\n      {robots.map((user, i) => {\r\n        return <Card key={i} id={robots[i].id} name={user.name} email={user.email} />\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardList\r\n","import React from \"react\"\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n  return <input type=\"search\" placeholder=\"search Robots\" onChange={searchChange} />\r\n}\r\n\r\nexport default SearchBox\r\n","import React from \"react\"\r\n\r\nconst Scroll = (props) => {\r\n  return <div className=\"scroll\">{props.children}</div>\r\n}\r\n\r\nexport default Scroll\r\n","import React, { Component } from \"react\"\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      hasError: false,\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Sorry there was an error</h1>\r\n    }\r\n    return this.props.children\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry\r\n","import React from \"react\"\r\nimport CardList from \"../components/CardList\"\r\nimport SearchBox from \"../components/SearchBox\"\r\nimport Scroll from \"../components/Scroll\"\r\nimport ErrorBoundry from \"../components/ErrorBoundry\"\r\nimport \"./index.css\"\r\n\r\n//app\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      robots: [],\r\n      searchfiled: \"\",\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => response.json())\r\n      .then((users) => {\r\n        this.setState({ robots: users })\r\n      })\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfiled: event.target.value })\r\n  }\r\n\r\n  render() {\r\n    const { robots, searchfiled } = this.state\r\n    const filteredRobots = robots.filter((robot) => {\r\n      return robot.name.toLowerCase().includes(searchfiled.toLowerCase())\r\n    })\r\n    return !robots.length ? (\r\n      <h1>Loading...</h1>\r\n    ) : (\r\n      <>\r\n        <div className=\"search-area\">\r\n          <h1>Robofriends</h1>\r\n          <SearchBox className=\"searchbox\" searchChange={this.onSearchChange} />\r\n        </div>\r\n        <Scroll>\r\n          <ErrorBoundry>\r\n            <CardList robots={filteredRobots} />\r\n          </ErrorBoundry>\r\n        </Scroll>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport App from \"./containers/App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <>\n      <App />\n    </>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}